import { setupAuthInterceptor } from './utils/apiClient';
import { useAuth0 } from '@auth0/auth0-react'; // Need this hook temporarily

// Temporary component to get access to the hook for initialization
const AuthInterceptorInitializer: React.FC = () => {
    const { getAccessTokenSilently } = useAuth0();
    useEffect(() => {
        // console.log('Setting up auth interceptor...');
        setupAuthInterceptor(getAccessTokenSilently);
    }, [getAccessTokenSilently]); // Re-setup if function instance changes (unlikely)
    return null; // This component doesn't render anything
};

// In your main render logic:
ReactDOM.createRoot(document.getElementById('root')!).render(
  <React.StrictMode>
    <BrowserRouter>
      <Auth0Provider /* ... your config ... */ >
        <AuthInterceptorInitializer /> {/* Add this component */}
        <App />
      </Auth0Provider>
    </BrowserRouter>
  </React.StrictMode>,
); 